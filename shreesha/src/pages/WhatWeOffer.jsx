import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import AOS from 'aos';
import 'aos/dist/aos.css';
import Solar6 from '../assets/images/SolarPanel4.jpg';

const WhatWeOffer = () => {
  // Initialize AOS
  useEffect(() => {
    AOS.init({
      duration: 1200,
      once: true,
      mirror: false,
    });
  }, []);

  // Stats counter animation
  const [count, setCount] = useState({
    systems: 0,
    clients: 0,
    savings: 0,
  });

  useEffect(() => {
    const interval = setInterval(() => {
      setCount((prevCount) => ({
        systems: prevCount.systems >= 500 ? 500 : prevCount.systems + 10,
        clients: prevCount.clients >= 200 ? 200 : prevCount.clients + 5,
        savings: prevCount.savings >= 60 ? 60 : prevCount.savings + 1,
      }));
    }, 50);

    return () => clearInterval(interval);
  }, []);

  // Animation variants
  const textVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.8, ease: 'easeOut' } },
  };

  const cardVariants = {
    hidden: { opacity: 0, y: 50 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.6, ease: 'easeOut' } },
  };

  // Solar system types data
  const solarSystems = [
    {
      id: 1,
      title: 'On Grid / Grid-Connected Solar System',
      description: 'On-grid systems send excess power generated to the utility grid when you are overproducing. These systems are ideal for locations with reliable grid connectivity and offer the best return on investment.',
      image: 'https://images.unsplash.com/photo-1509391366360-2e959784a276?ixlib=rb-4.0.3&auto=format&fit=crop&w=1504&q=80',
      features: [
        'No battery storage required',
        'Net metering benefits',
        'Lower upfront costs',
        'Grid as backup power source'
      ],
      stats: [
        { value: '30-50%', label: 'Average Savings' },
        { value: '5-7', label: 'Year Payback' },
        { value: '25+', label: 'Year Lifespan' }
      ]
    },
    {
      id: 2,
      title: 'Off Grid Solar System',
      description: 'Off-grid systems work independently of the grid but have batteries that can store the solar power generated by the system. Perfect for remote locations or areas with unreliable grid power.',
      image: 'https://plus.unsplash.com/premium_photo-1682148026899-d21f17c04e80?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OXx8c29sYXIlMjBwYW5lbHxlbnwwfHwwfHx8MA%3D%3D',
      features: [
        'Complete energy independence',
        'Battery storage included',
        'Ideal for remote locations',
        'No electricity bills'
      ],
      stats: [
        { value: '100%', label: 'Energy Independence' },
        { value: '10-15', label: 'Year Battery Life' },
        { value: '24/7', label: 'Power Availability' }
      ]
    },
    {
      id: 3,
      title: 'Hybrid Solar System',
      description: 'Hybrid solar panel systems are similar to a grid solar system but use batteries to store energy for later use. The perfect balance between grid-tied and off-grid systems.',
      image: 'https://images.unsplash.com/photo-1613665813446-82a78c468a1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1504&q=80',
      features: [
        'Grid + battery backup',
        'Smart energy management',
        'Peak shaving capability',
        'Maximizes self-consumption'
      ],
      stats: [
        { value: '50-80%', label: 'Self-Sufficiency' },
        { value: '10', label: 'Year Warranty' },
        { value: '30%', label: 'Extra Savings' }
      ]
    }
  ];

  // FAQ data
  const faqs = [
    {
      id: 1,
      question: 'Which solar system is right for me?',
      answer: 'The best system depends on your location, energy needs, and budget. Our experts will assess your situation and recommend the optimal solution during your free consultation.'
    },
    {
      id: 2,
      question: 'How much maintenance do solar systems require?',
      answer: 'Solar systems require minimal maintenance. We recommend annual inspections and occasional cleaning. Our maintenance packages make it hassle-free.'
    },
    {
      id: 3,
      question: 'What financing options are available?',
      answer: 'We offer flexible financing including OPEX, CAPEX, and CAPEX-EMI models. Our solutions can be tailored to fit various budget constraints.'
    },
    {
      id: 4,
      question: 'How long does installation take?',
      answer: 'Residential installations typically take 2-5 days, commercial projects 2-4 weeks. We ensure minimal disruption to your routine.'
    }
  ];

  // FAQ accordion state
  const [openFaq, setOpenFaq] = useState(null);
  const toggleFaq = (id) => {
    setOpenFaq(openFaq === id ? null : id);
  };

return (
  <div className="bg-gray-50">
    {/* Modernized Hero Section */}
    <section className="relative h-screen min-h-[600px] flex items-center justify-center overflow-hidden">
      <div className="absolute inset-0 z-0">
        <img
          src={Solar6}
          alt="Solar Panels"
          className="w-full h-full object-cover"
        />
        <div className="absolute inset-0 bg-gradient-to-r from-black/80 to-black/40"></div>
      </div>

      <div className="container mx-auto px-6 relative z-10">
        <motion.div 
          className="max-w-2xl"
          initial="hidden"
          animate="visible"
          variants={textVariants}
        >
          <div className="inline-flex items-center px-4 py-2 bg-green-500/20 rounded-full mb-6">
            <span className="text-green-400 font-medium">Solar Solutions</span>
          </div>
          
          <motion.h1
            className="text-5xl md:text-7xl font-extrabold text-white leading-tight mb-6"
            variants={textVariants}
            transition={{ delay: 0.2 }}
          >
            What We <span className="text-green-400">Offer</span>
          </motion.h1>
          
          <motion.p
            className="text-xl md:text-2xl text-gray-200 mb-8 max-w-lg"
            variants={textVariants}
            transition={{ delay: 0.4 }}
          >
            Comprehensive solar solutions tailored to your energy needs
          </motion.p>
          
          <motion.div
            className="flex items-center space-x-2 text-lg text-white"
            variants={textVariants}
            transition={{ delay: 0.6 }}
          >
            <a href="/" className="hover:text-green-400 transition-colors duration-300">
              Home
            </a>
            <span>›</span>
            <span className="text-green-400">What We Offer</span>
          </motion.div>
        </motion.div>
      </div>
      
      <motion.div
        className="absolute bottom-0 left-0 right-0 h-2 bg-green-500/50"
        initial={{ scaleX: 0 }}
        animate={{ scaleX: 1 }}
        transition={{ duration: 2, ease: 'easeInOut', repeat: Infinity, repeatType: 'reverse' }}
      />
    </section>

    {/* Stats Section remains the same */}
    <section className="py-16 bg-white">
      <div className="container mx-auto px-6">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {[
            { value: count.systems, label: 'Systems Installed', icon: '☀️' },
            { value: count.clients, label: 'Satisfied Clients', icon: '🤝' },
            { value: count.savings, label: '% Average Savings', icon: '💰' },
          ].map((stat, index) => (
            <motion.div
              key={index}
              className="text-center p-6 bg-gray-50 rounded-xl"
              variants={cardVariants}
              initial="hidden"
              whileInView="visible"
              viewport={{ once: true }}
              transition={{ delay: index * 0.2 }}
            >
              <div className="text-4xl mb-3">{stat.icon}</div>
              <div className="text-5xl font-bold text-green-600 mb-2">{stat.value}+</div>
              <h3 className="text-xl font-medium text-gray-800">{stat.label}</h3>
            </motion.div>
          ))}
        </div>
      </div>
    </section>

      {/* Solar Systems Section */}
      <section className="py-20 bg-gray-50">
        <div className="container mx-auto px-6">
          <motion.div 
            className="text-center mb-16"
            variants={textVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
          >
            <span className="inline-block px-4 py-2 bg-green-100 text-green-700 rounded-full font-medium mb-4">
              Our Solutions
            </span>
            <h2 className="text-4xl font-bold text-gray-900 mb-4">
              Comprehensive Solar Energy Systems
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              We provide customized solar solutions designed to maximize your savings and energy independence
            </p>
          </motion.div>

          <div className="space-y-16">
            {solarSystems.map((system, index) => (
              <motion.div
                key={system.id}
                className={`flex flex-col ${index % 2 === 0 ? 'lg:flex-row' : 'lg:flex-row-reverse'} gap-8 items-center`}
                variants={cardVariants}
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
              >
                <div className="lg:w-1/2 relative group">
                  <div className="aspect-w-16 aspect-h-9 rounded-xl overflow-hidden shadow-xl">
                    <img
                      src={system.image}
                      alt={system.title}
                      className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-700"
                    />
                  </div>
                  <div className="absolute -inset-4 border-2 border-green-500/20 rounded-xl -z-10"></div>
                </div>
                <div className="lg:w-1/2">
                  <h3 className="text-3xl font-bold text-gray-800 mb-4">{system.title}</h3>
                  <p className="text-gray-600 mb-6">{system.description}</p>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                    <div>
                      <h4 className="font-semibold text-gray-800 mb-3">Key Features:</h4>
                      <ul className="space-y-2">
                        {system.features.map((feature, idx) => (
                          <li key={idx} className="flex items-start">
                            <svg className="w-5 h-5 text-green-500 mt-0.5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7" />
                            </svg>
                            {feature}
                          </li>
                        ))}
                      </ul>
                    </div>
                    <div>
                      <h4 className="font-semibold text-gray-800 mb-3">Performance Stats:</h4>
                      <div className="grid grid-cols-3 gap-2">
                        {system.stats.map((stat, idx) => (
                          <div key={idx} className="bg-green-50 p-3 rounded-lg text-center">
                            <div className="text-xl font-bold text-green-600">{stat.value}</div>
                            <div className="text-xs text-gray-600">{stat.label}</div>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>

                  <motion.a
                    href="#contact"
                    className="inline-flex items-center px-6 py-3 bg-green-600 text-white font-medium rounded-lg hover:bg-green-700 transition-colors"
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    Learn More
                    <svg className="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                    </svg>
                  </motion.a>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Comparison Section */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-6">
          <motion.div 
            className="text-center mb-16"
            variants={textVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
          >
            <h2 className="text-4xl font-bold text-gray-900 mb-4">
              System Comparison
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Find the perfect solar solution by comparing our different system types
            </p>
          </motion.div>

          <motion.div
            className="overflow-x-auto"
            variants={cardVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
          >
            <table className="w-full border-collapse">
              <thead>
                <tr className="bg-gray-100">
                  <th className="p-4 text-left font-semibold text-gray-700">Feature</th>
                  {solarSystems.map((system) => (
                    <th key={system.id} className="p-4 text-center font-semibold text-gray-700">{system.title}</th>
                  ))}
                </tr>
              </thead>
              <tbody>
                {[
                  { feature: 'Grid Connection', values: ['Yes', 'No', 'Yes'] },
                  { feature: 'Battery Storage', values: ['No', 'Yes', 'Yes'] },
                  { feature: 'Electricity Bill Savings', values: ['30-50%', '100%', '50-80%'] },
                  { feature: 'Best For', values: ['Urban areas with reliable grid', 'Remote locations', 'Areas with frequent outages'] },
                  { feature: 'Maintenance', values: ['Low', 'Medium', 'Medium'] },
                  { feature: 'ROI Period', values: ['5-7 years', '7-10 years', '6-8 years'] },
                ].map((row, rowIndex) => (
                  <tr key={rowIndex} className={rowIndex % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>
                    <td className="p-4 font-medium text-gray-800 border-b border-gray-200">{row.feature}</td>
                    {row.values.map((value, colIndex) => (
                      <td key={colIndex} className="p-4 text-center text-gray-600 border-b border-gray-200">
                        {value}
                      </td>
                    ))}
                  </tr>
                ))}
              </tbody>
            </table>
          </motion.div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="py-20 bg-gray-50">
        <div className="container mx-auto px-6">
          <motion.div 
            className="text-center mb-16"
            variants={textVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
          >
            <span className="inline-block px-4 py-2 bg-green-100 text-green-700 rounded-full font-medium mb-4">
              FAQ
            </span>
            <h2 className="text-4xl font-bold text-gray-900 mb-4">
              Common Questions
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Get answers to the most frequently asked questions about our solar solutions
            </p>
          </motion.div>

          <div className="max-w-3xl mx-auto">
            {faqs.map((faq) => (
              <motion.div
                key={faq.id}
                className="mb-4 overflow-hidden rounded-xl bg-white shadow-md"
                variants={cardVariants}
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true }}
              >
                <button
                  className="flex items-center justify-between w-full p-6 text-left focus:outline-none"
                  onClick={() => toggleFaq(faq.id)}
                >
                  <h3 className="text-xl font-semibold text-gray-800">{faq.question}</h3>
                  <svg
                    className={`w-6 h-6 text-green-500 transform transition-transform ${openFaq === faq.id ? 'rotate-180' : ''}`}
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </button>
                <motion.div
                  className={`px-6 pb-6 ${openFaq === faq.id ? 'block' : 'hidden'}`}
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ 
                    opacity: openFaq === faq.id ? 1 : 0,
                    height: openFaq === faq.id ? 'auto' : 0
                  }}
                  transition={{ duration: 0.3 }}
                >
                  <p className="text-gray-600">{faq.answer}</p>
                </motion.div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-r from-green-700 to-green-800 text-white">
        <div className="container mx-auto px-6 text-center">
          <motion.div
            className="max-w-3xl mx-auto"
            variants={textVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
          >
            <h2 className="text-4xl font-bold mb-6">Ready to Go Solar?</h2>
            <p className="text-xl mb-8">
              Contact us today for a free consultation and discover which solar solution is right for you
            </p>
            <motion.a
              href="#contact"
              className="inline-block px-8 py-4 bg-white text-green-600 font-semibold rounded-full hover:bg-gray-100 transition-colors"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              Get Your Free Quote
            </motion.a>
          </motion.div>
        </div>
      </section>
    </div>
  );
};

export default WhatWeOffer;